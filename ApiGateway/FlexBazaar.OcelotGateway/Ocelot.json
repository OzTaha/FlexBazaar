// eğer api production ortama alıncaksa, production ile ilgili bir json dosyası oluşturulmalı ve onun üzerinden işlem yapılmalı. Canlıdan gelen değerler için json oluşturulmalı.
{
  "Routes": [
    // Catalog Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7017
        }
      ],
      // isteğin yapılacağı yer
      "UpstreamPathTemplate": "/services/catalog/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
      // AuthenticationOptions identity taradında henüz güvenlik alınmadığından dolayı kaldırıldı. Ocelot ile dağıtım geçekleştirmek için AuthenticationOptions kaldırıldı. diğer servisler için de aynı işlem uygulandı. 
      //"AuthenticationOptions": {
      //  "AuthenticationProviderKey": "OcelotAuthenticationScheme",
      //  // catalog servise yapılacak isteklerde kullanıcı için hangi araklıklara izin verileceği belirlenir
      //  "AllowedScopes": [ "CatalogFullPermission" ]
      //}
    },

    // Dicsount Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7018
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },

    // Order Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7019
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },

    // Cargo Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7020
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },

    // Basket Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7021
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },

    // Comment Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7022
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },

    // Payment Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7023
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    },


    // Images Microservice
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7024
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}",
      "UpstreamHttpMethod": [ "GET", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http"
    }

      // diğer servisler buradan itibaren eklenecek
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:5000"
  }
}